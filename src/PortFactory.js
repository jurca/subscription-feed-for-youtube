
import createPrivate from "namespace-proxy"

const PRIVATE = createPrivate()

/**
 * ID marking the initialization of this module, used to ensure that port names
 * generated by multiple instances of port factory with the same namespace will
 * generate unique port names.
 */
const INITIALIZATION_ID:string = Date.now().toString(36)

/**
 * The ID of the last port created by this module.
 */
let lastPortId: number = 0

/**
 * Utility for creating easily identifiable ports for two-way continuous
 * communication with the background page.
 */
export default class PortFactory {
  /**
   * Initializes the port factory.
   *
   * @param namespace The namespace using which the names of the created ports
   *        will be prefixed, making them easier to identify.
   */
  constructor(namespace: string) {
    /**
     * The namespace using which the names of the created ports will be
     * prefixed, making them easier to identify.
     * 
     * @type {string}
     */
    PRIVATE(this).namespace = namespace

    Object.freeze(this)
  }

  /**
   * Creates a new port for two-way communication with the background page.
   *
   * @return The created port.
   */
  createPort(): chrome.runtime.Port {
    let portId = ++lastPortId
    let name = `${PRIVATE(this).namespace}:${INITIALIZATION_ID}:${portId}`
    return chrome.runtime.connect({
      name
    })
  }
}
